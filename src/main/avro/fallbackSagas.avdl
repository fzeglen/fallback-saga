@namespace("com.worldremit.avro.fallback.sagas")
protocol FallbackSagas {
  import idl "./uuid.avdl";
  import idl "./fallback.avdl";

  enum FallbackSagaStatus {
    PENDING,
    IN_PROGRESS,
    COMPLETED,
    UNDO
  }

  enum FallbackSagaCommandStatus {
    PENDING,
    IN_PROGRESS,
    SUCCEDED,
    FAILED
  }

  record FallbackSagaAggregate {
    com.worldremit.avro.UUID transferId;
    timestamp_ms createdDate;
    timestamp_ms modifiedDate;
    array<com.worldremit.avro.fallback.DomainEvent> events = [];
    array<com.worldremit.avro.fallback.sagas.FallbackSagaCommand> commands = [];

//  TODO: this data can be retrived from events but its just read optimization
    union{null,com.worldremit.avro.UUID} amountDueId = null;
    union{null, int} fraudRiskScore = null;

    union{null, boolean} paymentCaptureStarted = null;
  }

  record FallbackSagaCommand {
    FallbackSagaCommandStatus status;
    com.worldremit.avro.fallback.DomainEvent payload;
  }

}